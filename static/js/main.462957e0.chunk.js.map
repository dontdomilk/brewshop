{"version":3,"sources":["logo.svg","core/home/index.js","components/card/index.js","services/rest_service.js","core/home/beer-mapper.js","core/home/mapper.js","core/home/selectors.js","components/modal/index.js","components/modal/beer-card/index.js","features/router/routes.js","features/home/index.js","core/home/actions.js","core/home/action-types.js","features/favorites/index.js","components/side-menu/index.js","components/page-wrapper/index.js","components/header/index.js","features/router/index.js","App.js","serviceWorker.js","core/home/reducer.js","reducers.js","store.js","index.js"],"names":["module","exports","HomepageGUI","Card","name","firstBrewed","description","imageUrl","foodPairing","id","onClick","className","src","alt","instance","axios","create","baseURL","process","mapToVM","payload","basic","first_brewed","food_pairing","join","image_url","tagline","recipe","abv","ibu","targetFg","target_fg","targetOg","target_og","ebc","beers","map","item","SingleBeerMapper","selectBeers","state","HomeReducer","selectHome","Modal","children","open","type","toggle","ReactDOM","createPortal","useState","isOpen","setOpen","transition","setTransition","useEffect","document","body","BeerCardModal","props","console","log","data","path","exact","displayName","component","modal","setModal","onCardClick","find","i","getBeers","key","connect","selectors","dispatch","params","a","async","restService","get","response","Mapper","SideMenu","Routes","to","activeClassName","PageWrapper","Header","title","withRouter","App","Boolean","window","location","hostname","match","initialState","loading","combineReducers","action","createStore","combinedReducers","applyMiddleware","thunk","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.462957e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport {connect, useSelector, useDispatch} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nexport default (HomepageGUI) => {\n\n    const mapDispatchToProps = (dispatch) => ({\n        getBeers: (params) => dispatch(actions.getBeers(params))\n    })\n\n\n\n    const mapStateToProps = (state) => ({\n        beers: selectors.selectBeers(state)\n    })\n\n\n\n    const HomepageWrapper = (props) => (\n        <HomepageGUI\n            getBeers={props.getBeers}\n            beers={props.beers}\n        />\n    )\n\n    return connect(mapStateToProps, mapDispatchToProps)(HomepageWrapper);\n}\n\n\n","import React from 'react';\nimport './style.scss';\n\nconst Card = ({name, firstBrewed, description, imageUrl, foodPairing, id, onClick}) => {\n\n    const handleClick = () => onClick(id);\n\n    return (\n        <div className=\"card\" onClick={handleClick}>\n            <div className=\"img-wrapper\">\n                <img src={imageUrl} alt=\"\"/>\n            </div>\n            <div className=\"text-wrapper\">\n                <div className=\"name\">{name}</div>\n                <div className=\"date\">{firstBrewed}</div>\n                <p className=\"description\">{description}</p>\n                <div className=\"pairing\">{foodPairing}</div>\n            </div>\n        </div>\n    )\n};\n\nexport default Card;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_PATH\n})\n\n\nexport default instance;","\n\nclass SingleBeerMapper {\n    mapToVM = (payload) => ({\n        id: payload.id,\n        basic: {\n            name: payload.name,\n            firstBrewed: payload.first_brewed,\n            foodPairing: payload.food_pairing.join(', '),\n            description: payload.description,\n            imageUrl: payload.image_url,\n            tagline: payload.tagline\n        },\n        recipe: {\n            abv: payload.abv,\n            ibu: payload.ibu,\n            targetFg: payload.target_fg,\n            targetOg: payload.target_og,\n            ebc: payload.ebc,\n\n        }\n    })\n}\n\nexport default new SingleBeerMapper();","\nimport SingleBeerMapper from './beer-mapper';\n\nclass BeerMapper {\n    mapToVM = (payload) => ({\n        beers: payload.map(item => SingleBeerMapper.mapToVM(item))\n    })\n}\n\nexport default new BeerMapper()","\n\nexport const selectHome = (state) => state.HomeReducer;\n\nexport const selectBeers = (state) => selectHome(state).beers;","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n\nconst Modal = ({children, type, id, open, toggle}) => {\n\n\n\n    const ModalElement = () => {\n        const [isOpen, setOpen] = useState(true);\n\n        const [transition, setTransition] = useState('');\n\n        useEffect(() => {\n            if (isOpen === true) {\n                setTransition('open')\n            } else {\n                setTransition('close')\n            }\n        }, [isOpen]);\n\n        const handleToggle = () => {\n            setOpen(!isOpen);\n            toggle();\n        };\n\n        return (\n            <div className={`modal-wrapper ${transition}`} >\n                <div className=\"content-wrapper\">\n                    <div className=\"close\" onClick={handleToggle}>X</div>\n                    {children}\n                </div>\n            </div>\n        )\n    }\n\n    return ( open ?\n        ReactDOM.createPortal(\n            <ModalElement/>,\n            document.body\n        )\n            :  null\n    )\n};\n\nexport default Modal;","import React from 'react';\nimport Modal from '../index.js';\n\n\nconst BeerCardModal = (props) => {\n    console.log(props)\n    return (\n        <Modal open={props.open} toggle={props.toggle} >\n            <div className=\"name\">{props.data.name}</div>\n        </Modal>\n    )\n}\n\nexport default BeerCardModal;","import Home from '../home';\nimport Favorites from '../favorites';\n\nexport default [\n    {\n        path: '/',\n        exact: true,\n        displayName: 'Home',\n        component: Home\n    },\n    {\n        path: '/favorite_beers',\n        displayName: 'Favorite Beers',\n        component: Favorites\n    },\n\n]","import React, {useEffect, useState} from 'react';\nimport Card from '../../components/card';\nimport HomepageContainer from '../../core/home';\nimport BeerCardModal from '../../components/modal/beer-card';\nimport './style.scss';\n\nconst temp = [\n    {\n        name: 'Beer 1',\n        firstBrewed: \"09/2013\",\n        description: 'lkansdfnasflk kjsadn  df jas fhjsad fdsafbhsdbafbdsajk fjdsahf ',\n        imageUrl: 'https://images.punkapi.com/v2/keg.png',\n        foodPairing: ['sushi', 'pizza','steak']\n    },\n    {\n        name: 'Beer 2',\n        firstBrewed: \"09/2013\",\n        description: 'lkansdfnasflk kjsadn  df jas fhjsad fdsafbhsdbafbdsajk fjdsahf ',\n        imageUrl: 'https://images.punkapi.com/v2/2.png',\n        foodPairing: ['pizza','sushi',  'steak']\n    },\n    {\n        name: 'Beer 3',\n        firstBrewed: \"09/2013\",\n        description: 'lkansdfnasflk kjsadn  df jas fhjsad fdsafbhsdbafbdsajk fjdsahf ',\n        imageUrl: 'https://images.punkapi.com/v2/4.png',\n        foodPairing: ['sushi', 'steak', 'pizza','steak']\n    }\n]\n\n\nconst HomeGUI = (props) => {\n\n    const {beers} = props;\n\n    const [modal, setModal] = useState({\n        open: false,\n        data: {\n            name: ''\n        }\n    })\n\n    const onCardClick = (id) => {\n\n        const data = props.beers.find(i => i.id === id);\n\n        setModal({\n            ...modal,\n            open: true,\n            data\n        })\n\n    }\n\n    const toggleModal = () => setModal({...modal, open: !modal.open})\n\n    useEffect(() => {\n        props.getBeers();\n    },[]);\n\n    return (\n        <div className=\"home-content-wrapper\">\n            <div className=\"card-wrapper\">\n                {beers && beers.map((item, i) => (\n                    <Card\n                        onClick={onCardClick}\n                        key={`beer-card-${i}`}\n                        {...item}\n                    />\n                ))}\n                {<BeerCardModal\n                    toggle={toggleModal}\n                    open={modal.open}\n                    data={modal.data}\n                />}\n            </div>\n        </div>\n    )\n}\n\nexport default HomepageContainer(HomeGUI);","import restService from '../../services/rest_service';\nimport * as actionTypes from './action-types';\nimport Mapper from './mapper';\n\n\nexport const getBeers = (filters) => async (dispatch) => {\n    dispatch({type: actionTypes.TOGGLE_LOADING})\n    const response = await restService.get('/beers');\n\n    if (response) {\n\n        dispatch({type: actionTypes.GET_BEERS_SUCCESS, payload: Mapper.mapToVM(response.data)});\n        dispatch({type: actionTypes.TOGGLE_LOADING})\n    }\n\n};","export const GET_BEERS_SUCCESS = 'HOME@GET_BEERS_SUCCESS';\nexport const TOGGLE_LOADING = 'HOME@TOGGLE_LOADING';","import React from 'react';\n\nconst Favorites = (props) => {\n    return (\n        <div className=\"favorites\">\n            Favorite Beers!\n        </div>\n    )\n}\n\nexport default Favorites;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Routes from '../../features/router/routes';\nimport './style.scss';\n\n\nconst SideMenu = () => {\n    return (\n        <aside className=\"side-menu\">\n            {Routes.map((item, i) => (\n                <div className=\"side-menu-link\" key={`side-menu-link-${i}`}>\n                    <NavLink\n                        to={item.path}\n                        activeClassName=\"active-link\"\n                        exact={item.exact || false}\n                    >{item.displayName}</NavLink>\n                </div>\n            ))}\n        </aside>\n    )\n};\n\nexport default SideMenu;","import React from 'react';\nimport SideMenu from '../side-menu';\nimport './style.scss';\n\nconst PageWrapper = ({children}) => {\n    return (\n        <main>\n            <div className=\"main-wrapper\">\n                <SideMenu/>\n                <div className=\"content\">\n                    {children}\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default PageWrapper;","import React from 'react';\nimport \"./style.scss\";\n\nconst Header = ({title}) => {\n    return (\n        <header>\n            <h1>{title}</h1>\n        </header>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport {Switch, Route} from 'react-router';\nimport Home from '../home';\nimport Routes from './routes';\nimport {withRouter} from 'react-router-dom';\n\nconst AppRouter = (props) => {\n\n    return (\n        <Switch>\n            {\n                Routes.map(\n                    ({path, component, exact=false}, i) => (\n                        <Route\n                            path={path}\n                            component={component}\n                            exact={exact}\n                            key={`app-route-${i}`}\n                        />\n                    )\n                )\n            }\n            <Route path=\"/beers\" component={() => <div>Beer Page!</div>}/>\n            {/*<Route component={Home}/>*/}\n        </Switch>\n    )\n}\n\nexport default withRouter(AppRouter);","import React from 'react';\nimport logo from './logo.svg';\nimport PageWrapper from './components/page-wrapper';\nimport Header from './components/header';\nimport AppRouter from \"./features/router\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Brewshop\"/>\n      <PageWrapper>\n        <AppRouter/>\n      </PageWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './action-types'\n\nconst initialState = {\n    beers: [],\n    loading: false\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_LOADING:\n            const {loading} = state;\n\n            return {\n                ...state,\n                loading: !loading\n            }\n        case actionTypes.GET_BEERS_SUCCESS:\n\n            const { payload: {beers} } = action;\n\n            return {\n                ...state,\n                beers\n            };\n\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport HomeReducer from './core/home/reducer';\n\nexport default combineReducers({\n    HomeReducer\n});","import {createStore, applyMiddleware} from 'redux';\nimport combinedReducers from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default createStore(combinedReducers, applyMiddleware(thunk))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}